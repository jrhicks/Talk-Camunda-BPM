!function(a){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=a();else if("function"==typeof define&&define.amd)define([],a);else{var b;b="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,b.TasklistPlugins=a()}}(function(){return function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i="function"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error("Cannot find module '"+g+"'");throw j.code="MODULE_NOT_FOUND",j}var k=c[g]={exports:{}};b[g][0].call(k.exports,function(a){var c=b[g][1][a];return e(c?c:a)},k,k.exports,a,b,c,d)}return c[g].exports}for(var f="function"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b,c){"use strict";var d='<a href\n   ng-click="open()">\n  <span class="glyphicon glyphicon-paperclip"></span>\n  {{ \'CREATE_TASK\' | translate }}\n</a>\n',e='<!-- # CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/standaloneTask/app/navbar/action/modals/cam-tasklist-create-task-modal.html -->\n<div class="modal-header">\n  <h3 class="cam-tasklist-create-task modal-title">{{ \'CREATE_TASK\' | translate }}</h3>\n</div>\n\n<div class="modal-body">\n\n  <div notifications-panel></div>\n\n  <form class="form-horizontal"\n        name="newTaskForm"\n        role="form">\n    <div ng-init="setNewTaskForm(this.newTaskForm)"></div>\n\n    <div class="form-group">\n      <label for="filter-form-color"\n             class="col-xs-2 control-label">{{ \'NEW_TASK_NAME\' | translate }}</label>\n      <div class="col-xs-10">\n        <input class="form-control"\n               name="taskName"\n               ng-model="task.name"\n               required\n               type="text" />\n        <span ng-if="this.newTaskForm.taskName.$invalid && this.newTaskForm.taskName.$dirty"\n              class="has-error">\n          <span ng-show="this.newTaskForm.taskName.$error.required"\n                class="help-block">\n            {{ \'REQUIRED_FIELD\' | translate }}\n          </span>\n        </span>\n      </div>\n    </div>\n\n    <div class="form-group">\n      <label for="filter-form-color"\n             class="col-xs-2 control-label">{{ \'NEW_TASK_ASSIGNEE\' | translate }}</label>\n      <div class="col-xs-10">\n        <input class="form-control"\n               name="taskAssignee"\n               ng-model="task.assignee"\n               type="text" />\n      </div>\n    </div>\n\n    <div class="form-group" ng-if="tenants">\n      <label for="filter-form-color"\n             class="col-xs-2 control-label">{{ \'NEW_TASK_TENANT_ID\' | translate }}</label>\n      <div class="col-xs-10">\n        <select class="form-control"\n                name="taskTenantId"\n                ng-model="task.tenantId">\n          <option ng-repeat="tenant in tenants" value="{{tenant.id}}">{{tenant.id}}</option>\n        </select>\n      </div>\n    </div>\n\n    <div class="form-group">\n      <label for="filter-form-color"\n             class="col-xs-2 control-label">{{ \'NEW_TASK_DESCRIPTION\' | translate }}</label>\n      <div class="col-xs-10">\n        <textarea class="form-control"\n                  name="taskDescription"\n                  ng-model="task.description"\n                  rows="4">\n        </textarea>\n      </div>\n    </div>\n\n  </form>\n\n</div>\n\n<div class="modal-footer">\n  <div class="row row-action">\n\n    <div class="col-xs-12">\n      <button class="btn btn-xs btn-link"\n              type="button"\n              ng-click="$dismiss()">\n        {{ \'CLOSE\' | translate }}\n      </button>\n\n      <button class="btn btn-primary"\n              type="submit"\n              ng-click="save()"\n              ng-disabled="!isValid()">\n        {{ \'SAVE\' | translate }}\n      </button>\n    </div>\n\n  </div>\n</div>\n<!-- / CE - camunda-bpm-webapp/webapp/src/main/resources-plugin/standaloneTask/app/navbar/action/modals/cam-tasklist-create-task-modal.html -->\n',f=["$scope","$modal","$timeout",function(a,b,c){a.open=function(){var d=b.open({size:"lg",controller:"camCreateTaskModalCtrl",template:e});d.result.then(function(b){a.tasklistApp&&a.tasklistApp.refreshProvider&&(a.tasklistApp.refreshProvider.refreshTaskList(),document.querySelector(".create-task-action a").focus())},function(){document.querySelector(".create-task-action a").focus()}),d.opened.then(function(){c(function(){c(function(){document.querySelectorAll("div.modal-content input")[0].focus()})})})}}],g=function(a){a.registerDefaultView("tasklist.navbar.action",{id:"create-task-action",template:d,controller:f,priority:200})};g.$inject=["ViewsProvider"],b.exports=g},{}],2:[function(a,b,c){(function(a){"use strict";var c="undefined"!=typeof window?window.angular:"undefined"!=typeof a?a.angular:null;b.exports=["$scope","$translate","Notifications","camAPI",function(a,b,d,e){function f(){var b={userMember:a.authentication.name,includingGroupsOfUser:!0};i.list(b,function(b,c){c&&c.length>0&&(j.tenantId=c[0].id,c.length>1&&(a.tenants=c))})}var g={name:null,assignee:null,tenantId:null,description:null,priority:50},h=e.resource("task"),i=e.resource("tenant"),j=a.task=c.copy(g),k=null;f(),a.setNewTaskForm=function(a){k=a},a.$on("$locationChangeSuccess",function(){a.$dismiss()});var l=a.isValid=function(){return k&&k.$valid};a.save=function(){l()&&h.create(j,function(c){c?b("TASK_SAVE_ERROR").then(function(b){d.addError({status:b,message:c?c.message:"",exclusive:!0,scope:a})}):a.$close()})}}]}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}],3:[function(a,b,c){(function(c){"use strict";var d="undefined"!=typeof window?window.angular:"undefined"!=typeof c?c.angular:null,e=a("./action/cam-tasklist-navbar-action-create-task-plugin"),f=a("./action/modals/cam-tasklist-create-task-modal"),g=d.module("tasklist.plugin.standaloneTask.navbar.action",[]);g.config(e),g.controller("camCreateTaskModalCtrl",f),b.exports=g}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./action/cam-tasklist-navbar-action-create-task-plugin":1,"./action/modals/cam-tasklist-create-task-modal":2}],4:[function(a,b,c){(function(c){"use strict";var d="undefined"!=typeof window?window.angular:"undefined"!=typeof c?c.angular:null,e=a("./navbar/main");b.exports=d.module("tasklist.plugin.standaloneTask",[e.name])}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./navbar/main":3}],5:[function(a,b,c){(function(c){"use strict";var d="undefined"!=typeof window?window.angular:"undefined"!=typeof c?c.angular:null,e=a("./standaloneTask/app/plugin");b.exports=d.module("tasklist.plugin.tasklistPlugins",[e.name])}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./standaloneTask/app/plugin":4}]},{},[5])(5)});